version: "3.9"

name: sep490
services:
  discovery-server:
    build:
      context: ./discovery-server
    image: ${IMAGE_PREFIX:-local}/discovery-server:${IMAGE_TAG:-dev}
    container_name: discovery-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DISCOVERY_PORT: ${DISCOVERY_PORT:-8761}
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
    ports:
      - "${DISCOVERY_PORT:-8761}:8761"
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8761/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [sep490-net]

  rookie-service:
    build:
      context: ./rookie-service
    image: ${IMAGE_PREFIX:-local}/rookie-service:${IMAGE_TAG:-dev}
    container_name: rookie-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      ROOKIE_PORT: ${ROOKIE_PORT:-8081}
      EUREKA_URL: http://discovery-server:8761/eureka
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
      # Ví dụ secrets thêm vào .env của bạn:
      # GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, JWT_SECRET, SMTP_HOST, SMTP_USERNAME, SMTP_PASSWORD, ...
    ports:
      - "${ROOKIE_PORT:-8081}:8081"
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8081/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [sep490-net]

  ai-service:
    build:
      context: ./ai-service
    image: ${IMAGE_PREFIX:-local}/ai-service:${IMAGE_TAG:-dev}
    container_name: ai-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      AI_PORT: ${AI_PORT:-8082}
      EUREKA_URL: http://discovery-server:8761/eureka
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
    ports:
      - "${AI_PORT:-8082}:8082"
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8082/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [sep490-net]

  ar-service:
    build:
      context: ./ar-service
    image: ${IMAGE_PREFIX:-local}/ar-service:${IMAGE_TAG:-dev}
    container_name: ar-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      AR_PORT: ${AR_PORT:-8083}
      EUREKA_URL: http://discovery-server:8761/eureka
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
    ports:
      - "${AR_PORT:-8083}:8083"
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8083/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [sep490-net]

  api-gateway:
    build:
      context: ./api-gateway
    image: ${IMAGE_PREFIX:-local}/api-gateway:${IMAGE_TAG:-dev}
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
      GATEWAY_PORT: ${GATEWAY_PORT:-8080}
      EUREKA_URL: http://discovery-server:8761/eureka
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
    ports:
      - "${GATEWAY_PORT:-8080}:8080"
    depends_on:
      discovery-server:
        condition: service_healthy
      rookie-service:
        condition: service_healthy
      ai-service:
        condition: service_healthy
      ar-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [sep490-net]

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${MSSQL_SA_PASSWORD:-YourStrong!Passw0rd}
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: [ "CMD-SHELL","/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P \"$${SA_PASSWORD}\" -No -Q \"SELECT 1\" -C || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 30
    networks: [ sep490-net ]

networks:
  sep490-net:
    driver: bridge

volumes:
  mssql_data:
  uploads_data:
