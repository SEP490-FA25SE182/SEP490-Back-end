server:
  port: 8085

spring:
  application:
    name: rookie-service

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${DB_DRIVER}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.SQLServerDialect
    show-sql: true

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms

  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false
      use-key-prefix: true

  cloud:
    discovery:
      enabled: true
    service-registry:
      auto-registration:
        enabled: true

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

app:
  mail:
    from: ${APP_MAIL_FROM:Rookies <no-reply@rookies.com>}
  frontend:
    reset-password-url: ${APP_FRONTEND_RESET_PASSWORD_URL:https://your-frontend/reset}

rookie:
  payos:
    base-url: https://api-merchant.payos.vn
    client-id: ${PAYOS_CLIENT_ID}
    api-key: ${PAYOS_API_KEY}
    checksum-key: ${PAYOS_CHECKSUM_KEY}
    return-url: https://your-frontend.com/checkout/success
    cancel-url: https://your-frontend.com/checkout/cancel
